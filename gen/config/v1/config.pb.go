// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: config/v1/config.proto

package configv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Base struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ListenAddr    string                 `protobuf:"bytes,1,opt,name=listen_addr,json=listenAddr,proto3" json:"listen_addr,omitempty"`
	ListenPort    int32                  `protobuf:"varint,2,opt,name=listen_port,json=listenPort,proto3" json:"listen_port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Base) Reset() {
	*x = Base{}
	mi := &file_config_v1_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Base) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base) ProtoMessage() {}

func (x *Base) ProtoReflect() protoreflect.Message {
	mi := &file_config_v1_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base.ProtoReflect.Descriptor instead.
func (*Base) Descriptor() ([]byte, []int) {
	return file_config_v1_config_proto_rawDescGZIP(), []int{0}
}

func (x *Base) GetListenAddr() string {
	if x != nil {
		return x.ListenAddr
	}
	return ""
}

func (x *Base) GetListenPort() int32 {
	if x != nil {
		return x.ListenPort
	}
	return 0
}

type Config struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Base            *Base                  `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Sms             *Sms                   `protobuf:"bytes,2,opt,name=sms,proto3" json:"sms,omitempty"`
	Mail            *Mail                  `protobuf:"bytes,3,opt,name=mail,proto3" json:"mail,omitempty"`
	Captcha         *Captcha               `protobuf:"bytes,4,opt,name=captcha,proto3" json:"captcha,omitempty"`
	GlobalId        *GlobalId              `protobuf:"bytes,5,opt,name=global_id,json=globalId,proto3" json:"global_id,omitempty"`
	ShortId         *ShortId               `protobuf:"bytes,6,opt,name=short_id,json=shortId,proto3" json:"short_id,omitempty"`
	Wechat          *Wechat                `protobuf:"bytes,7,opt,name=wechat,proto3" json:"wechat,omitempty"`
	Db              *Db                    `protobuf:"bytes,8,opt,name=db,proto3" json:"db,omitempty"`
	Redis           *Redis                 `protobuf:"bytes,9,opt,name=redis,proto3" json:"redis,omitempty"`
	DistributedLock *DistributedLock       `protobuf:"bytes,10,opt,name=distributed_lock,json=distributedLock,proto3" json:"distributed_lock,omitempty"`
	User            *User                  `protobuf:"bytes,100,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Config) Reset() {
	*x = Config{}
	mi := &file_config_v1_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_config_v1_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_config_v1_config_proto_rawDescGZIP(), []int{1}
}

func (x *Config) GetBase() *Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *Config) GetSms() *Sms {
	if x != nil {
		return x.Sms
	}
	return nil
}

func (x *Config) GetMail() *Mail {
	if x != nil {
		return x.Mail
	}
	return nil
}

func (x *Config) GetCaptcha() *Captcha {
	if x != nil {
		return x.Captcha
	}
	return nil
}

func (x *Config) GetGlobalId() *GlobalId {
	if x != nil {
		return x.GlobalId
	}
	return nil
}

func (x *Config) GetShortId() *ShortId {
	if x != nil {
		return x.ShortId
	}
	return nil
}

func (x *Config) GetWechat() *Wechat {
	if x != nil {
		return x.Wechat
	}
	return nil
}

func (x *Config) GetDb() *Db {
	if x != nil {
		return x.Db
	}
	return nil
}

func (x *Config) GetRedis() *Redis {
	if x != nil {
		return x.Redis
	}
	return nil
}

func (x *Config) GetDistributedLock() *DistributedLock {
	if x != nil {
		return x.DistributedLock
	}
	return nil
}

func (x *Config) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

var File_config_v1_config_proto protoreflect.FileDescriptor

const file_config_v1_config_proto_rawDesc = "" +
	"\n" +
	"\x16config/v1/config.proto\x12\tconfig.v1\x1a\x13config/v1/sms.proto\x1a\x14config/v1/mail.proto\x1a\x17config/v1/captcha.proto\x1a\x16config/v1/common.proto\x1a\x14config/v1/user.proto\"H\n" +
	"\x04Base\x12\x1f\n" +
	"\vlisten_addr\x18\x01 \x01(\tR\n" +
	"listenAddr\x12\x1f\n" +
	"\vlisten_port\x18\x02 \x01(\x05R\n" +
	"listenPort\"\xe1\x03\n" +
	"\x06Config\x12#\n" +
	"\x04base\x18\x01 \x01(\v2\x0f.config.v1.BaseR\x04base\x12 \n" +
	"\x03sms\x18\x02 \x01(\v2\x0e.config.v1.SmsR\x03sms\x12#\n" +
	"\x04mail\x18\x03 \x01(\v2\x0f.config.v1.MailR\x04mail\x12,\n" +
	"\acaptcha\x18\x04 \x01(\v2\x12.config.v1.CaptchaR\acaptcha\x120\n" +
	"\tglobal_id\x18\x05 \x01(\v2\x13.config.v1.GlobalIdR\bglobalId\x12-\n" +
	"\bshort_id\x18\x06 \x01(\v2\x12.config.v1.ShortIdR\ashortId\x12)\n" +
	"\x06wechat\x18\a \x01(\v2\x11.config.v1.WechatR\x06wechat\x12\x1d\n" +
	"\x02db\x18\b \x01(\v2\r.config.v1.DbR\x02db\x12&\n" +
	"\x05redis\x18\t \x01(\v2\x10.config.v1.RedisR\x05redis\x12E\n" +
	"\x10distributed_lock\x18\n" +
	" \x01(\v2\x1a.config.v1.DistributedLockR\x0fdistributedLock\x12#\n" +
	"\x04user\x18d \x01(\v2\x0f.config.v1.UserR\x04userB\x95\x01\n" +
	"\rcom.config.v1B\vConfigProtoP\x01Z2github.com/byteflowing/base/gen/config/v1;configv1\xa2\x02\x03CXX\xaa\x02\tConfig.V1\xca\x02\tConfig\\V1\xe2\x02\x15Config\\V1\\GPBMetadata\xea\x02\n" +
	"Config::V1b\x06proto3"

var (
	file_config_v1_config_proto_rawDescOnce sync.Once
	file_config_v1_config_proto_rawDescData []byte
)

func file_config_v1_config_proto_rawDescGZIP() []byte {
	file_config_v1_config_proto_rawDescOnce.Do(func() {
		file_config_v1_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_config_v1_config_proto_rawDesc), len(file_config_v1_config_proto_rawDesc)))
	})
	return file_config_v1_config_proto_rawDescData
}

var file_config_v1_config_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_config_v1_config_proto_goTypes = []any{
	(*Base)(nil),            // 0: config.v1.Base
	(*Config)(nil),          // 1: config.v1.Config
	(*Sms)(nil),             // 2: config.v1.Sms
	(*Mail)(nil),            // 3: config.v1.Mail
	(*Captcha)(nil),         // 4: config.v1.Captcha
	(*GlobalId)(nil),        // 5: config.v1.GlobalId
	(*ShortId)(nil),         // 6: config.v1.ShortId
	(*Wechat)(nil),          // 7: config.v1.Wechat
	(*Db)(nil),              // 8: config.v1.Db
	(*Redis)(nil),           // 9: config.v1.Redis
	(*DistributedLock)(nil), // 10: config.v1.DistributedLock
	(*User)(nil),            // 11: config.v1.User
}
var file_config_v1_config_proto_depIdxs = []int32{
	0,  // 0: config.v1.Config.base:type_name -> config.v1.Base
	2,  // 1: config.v1.Config.sms:type_name -> config.v1.Sms
	3,  // 2: config.v1.Config.mail:type_name -> config.v1.Mail
	4,  // 3: config.v1.Config.captcha:type_name -> config.v1.Captcha
	5,  // 4: config.v1.Config.global_id:type_name -> config.v1.GlobalId
	6,  // 5: config.v1.Config.short_id:type_name -> config.v1.ShortId
	7,  // 6: config.v1.Config.wechat:type_name -> config.v1.Wechat
	8,  // 7: config.v1.Config.db:type_name -> config.v1.Db
	9,  // 8: config.v1.Config.redis:type_name -> config.v1.Redis
	10, // 9: config.v1.Config.distributed_lock:type_name -> config.v1.DistributedLock
	11, // 10: config.v1.Config.user:type_name -> config.v1.User
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_config_v1_config_proto_init() }
func file_config_v1_config_proto_init() {
	if File_config_v1_config_proto != nil {
		return
	}
	file_config_v1_sms_proto_init()
	file_config_v1_mail_proto_init()
	file_config_v1_captcha_proto_init()
	file_config_v1_common_proto_init()
	file_config_v1_user_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_config_v1_config_proto_rawDesc), len(file_config_v1_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_v1_config_proto_goTypes,
		DependencyIndexes: file_config_v1_config_proto_depIdxs,
		MessageInfos:      file_config_v1_config_proto_msgTypes,
	}.Build()
	File_config_v1_config_proto = out.File
	file_config_v1_config_proto_goTypes = nil
	file_config_v1_config_proto_depIdxs = nil
}
