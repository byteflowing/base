// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

const TableNameUserSignLog = "user_sign_log"

// UserSignLog mapped from table <user_sign_log>
type UserSignLog struct {
	ID               int64   `gorm:"column:id;type:bigint;primaryKey;autoIncrement:true" json:"id"`
	UID              int64   `gorm:"column:uid;type:bigint;not null;index:idx_sign_log_uid,priority:1" json:"uid"`
	Type             int16   `gorm:"column:type;type:smallint;not null" json:"type"`
	Status           int16   `gorm:"column:status;type:smallint;not null" json:"status"`
	Identifier       string  `gorm:"column:identifier;type:character varying(50);not null" json:"identifier"`
	IP               *string `gorm:"column:ip;type:character varying(50)" json:"ip"`
	Location         *string `gorm:"column:location;type:character varying(100)" json:"location"`
	Agent            *string `gorm:"column:agent;type:character varying(255)" json:"agent"`
	Device           *string `gorm:"column:device;type:character varying(255)" json:"device"`
	AccessSessionID  string  `gorm:"column:access_session_id;type:character(36);not null;uniqueIndex:idx_sign_log_access_session_id,priority:1" json:"access_session_id"`
	RefreshSessionID string  `gorm:"column:refresh_session_id;type:character(36);not null;uniqueIndex:idx_sign_log_refresh_session_id,priority:1" json:"refresh_session_id"`
	AccessExpiredAt  int64   `gorm:"column:access_expired_at;type:bigint;not null" json:"access_expired_at"`
	RefreshExpiredAt int64   `gorm:"column:refresh_expired_at;type:bigint;not null" json:"refresh_expired_at"`
	DeletedAt        *int64  `gorm:"column:deleted_at;type:bigint" json:"deleted_at"`
	UpdatedAt        int64   `gorm:"column:updated_at;type:bigint;not null" json:"updated_at"`
	CreatedAt        int64   `gorm:"column:created_at;type:bigint;not null" json:"created_at"`
}

// TableName UserSignLog's table name
func (*UserSignLog) TableName() string {
	return TableNameUserSignLog
}
