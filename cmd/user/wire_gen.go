// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/byteflowing/base/dal"
	"github.com/byteflowing/base/pkg/captcha"
	"github.com/byteflowing/base/pkg/common"
	"github.com/byteflowing/base/pkg/msg/mail"
	"github.com/byteflowing/base/pkg/msg/sms"
	"github.com/byteflowing/base/pkg/user"
	"github.com/byteflowing/proto/gen/go/config/v1"
	"github.com/byteflowing/proto/gen/go/services/user/v1"
	"github.com/google/wire"
)

// Injectors from wire.go:

func NewWithConfig(confFile string) *user.Impl {
	config := user.NewConfig(confFile)
	userConfig := config.User
	userCacheConfig := userConfig.Cache
	redisConfig := config.Redis
	redis := common.NewRDB(redisConfig)
	cache := user.NewCache(userCacheConfig, redis)
	repo := user.NewRepo(cache)
	dbConfig := config.Db
	db := common.NewDb(dbConfig)
	query := dal.New(db)
	userJwtConfig := userConfig.Jwt
	userAuthLimiterConfig := userConfig.AuthLimiter
	authLimiter := user.NewAuthLimiter(userAuthLimiterConfig, redis)
	sessionBlockListConfig := userConfig.SessionBlockList
	blockList := user.NewSessionBlockList(sessionBlockListConfig, redis)
	jwtService := user.NewJwtService(userJwtConfig, repo, authLimiter, blockList)
	tokenVerifyConfig := userConfig.TwoStepVerifier
	twoStepVerifier := user.NewTwoStepVerifier(tokenVerifyConfig, redis)
	globalIdConfig := config.GlobalId
	globalIdGenerator := common.NewGlobalIdGenerator(globalIdConfig)
	shortIdConfig := config.ShortId
	shortIDGenerator := common.NewShortIDGenerator(globalIdGenerator, shortIdConfig)
	captchaConfig := config.Captcha
	smsConfig := config.Sms
	smsSms := sms.New(smsConfig)
	mailConfig := config.Mail
	mailMail := mail.New(mailConfig)
	captchaCaptcha := captcha.NewCaptcha(captchaConfig, redis, smsSms, mailMail)
	wechatConfig := config.Wechat
	wechatManager := common.NewWechatManager(wechatConfig)
	impl := user.New(config, repo, query, jwtService, twoStepVerifier, shortIDGenerator, globalIdGenerator, captchaCaptcha, wechatManager, authLimiter)
	return impl
}

// wire.go:

var publicSet = wire.NewSet(common.NewDb, common.NewRDB, common.NewDistributedLock, common.NewGlobalIdGenerator, common.NewShortIDGenerator, common.NewWechatManager, captcha.NewSmsCaptcha, captcha.NewMailCaptcha, captcha.NewCaptcha, sms.New, mail.New, dal.New)

var userProviderSet = wire.NewSet(user.NewCache, user.NewRepo, user.NewJwtService, user.NewTwoStepVerifier, user.NewAuthLimiter, user.New, user.NewSessionBlockList, user.NewConfig, wire.FieldsOf(
	new(*configv1.Config),
	"Sms",
	"Mail",
	"Captcha",
	"GlobalId",
	"ShortId",
	"Wechat",
	"Db",
	"Redis",
	"DistributedLock",
	"User",
), wire.FieldsOf(new(*userv1.UserConfig), "AuthLimiter", "Jwt", "TwoStepVerifier", "Cache", "SessionBlockList"),
)
